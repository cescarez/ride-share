1. What things (objects, nouns) are represented or described in this file? We can think of at least six different things.
    1. Driver ID
    2. Date of ride Dth Mon YYYY
    3. Cost of ride ($)
    4. Rider ID
    5. Ride rating
    6. Delimiter (comma)
    7. Header line
    8. New line characters separating each ride
2. From the things you listed in the previous question, all of those things have relationships to each other. (an ID belongs to a person, for instance. As an abstract, unrelated example a VIN belongs to a vehicle, and a vehicle has a VIN.) Consider the relationships between the pieces of data.

3. Lastly, in this assignment, we will rearrange all of the data into one data structure (with a lot of nested layers), that can be held in one variable. List some ideas: considering all of the relationships listed in the last question, what piece of data can contain the others at the top-most level? (Compared to the json example before, think about what the top-most layer of the hash and what that represented.) There is more than one correct answer, so just list out the options at this moment.

    Data structure: Array of hashes, each hash is a ride
    other ideas: array of hashes, with each hash as a date
        array of hashes, each hash is a driver ID
        array of hashes, each hash is a rider ID
Iterate through the data structure to display, by printing in terminal, the following info:

    The number of rides each driver has given
    The total amount of money each driver has made
    The average rating for each driver
    Which driver made the most money?
    Which driver has the highest average rating?

You may create and/or use as many variables, loops, and methods as you need.

Optionally, print in the terminal:

    For each driver, on which day did they make the most money?
__________


Once you're ready to submit this assignment (please mind the due date), you must do the following things to your code first:

    Read through every line in the file and do the following things to clean it up:
        Every thing that is not code needs to either be deleted or turned into a comment
        Check white space. Remove large amounts of unnecessary white space, and add in helpful white space
        Check indentation: make sure it's proper, especially as you nest and loop
        Remove all unnecessary puts statements. We expect that the program will output to the terminal the descriptions and the answers of each prompt, and nothing else
        Have all of the variable names been accurately named? Do you need to refactor any pieces of code?
        Check comments; do you need to delete unnecessary comments? Do you need to add some comments? (Most of the time, unless your code is particularly complex, you should have zero or few comments by the time of submission)

    Most importantly: make sure that your code is runnable. Run your code and make sure that simply running your program does not quit with Ruby error output. Your program should exit once everything is finished executing in an expected manner

When you feel like your code is in a good place, please open an appropriate PR (Pull Request), answer the reflection questions that appear when creating that PR, and submit!
